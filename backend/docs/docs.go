// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/entries": {
            "get": {
                "description": "Returns all entries from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entries"
                ],
                "summary": "List all timesheet entries",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Timesheet"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new timesheet entry to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entries"
                ],
                "summary": "Create a new timesheet entry",
                "parameters": [
                    {
                        "description": "New timesheet entry",
                        "name": "entry",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Timesheet"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Timesheet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/entries/{client}": {
            "get": {
                "description": "Returns all timesheet entries for a specific client",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entries"
                ],
                "summary": "Get entries by client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client name",
                        "name": "client",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Timesheet"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/summary": {
            "get": {
                "description": "Returns aggregated hours and billable amounts grouped by client and project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "summary"
                ],
                "summary": "Get timesheet summary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TimesheetSummary"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.Timesheet": {
            "type": "object",
            "properties": {
                "billable": {
                    "type": "boolean"
                },
                "billable_rate": {
                    "type": "number"
                },
                "client": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "hours": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "project": {
                    "type": "string"
                },
                "project_code": {
                    "type": "string"
                }
            }
        },
        "models.TimesheetSummary": {
            "type": "object",
            "properties": {
                "billable_amount": {
                    "type": "number",
                    "example": 3040
                },
                "billable_hours": {
                    "type": "number",
                    "example": 38
                },
                "client": {
                    "type": "string",
                    "example": "Olith"
                },
                "hours": {
                    "type": "number",
                    "example": 42.5
                },
                "name": {
                    "type": "string",
                    "example": "Pharos"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
